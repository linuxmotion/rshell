Script started on Sat 24 Jan 2015 02:31:48 AM PST
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ # testing command ec[Kxcecutino[K[Kon
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ ls
[0m[01;34mbin[0m  [01;34mDebug[0m  License  LICENSE  Makefile  [01;34mobj[0m  README.md  [01;34msrc[0m  [01;34mtest[0m
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ man
What manual page do you want?
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ git 
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ echo [K[K[K[K[Ktrue
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ ls[Kd
ld: no input files
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ # testing commands [K[K executio nwith[K[K[K[K[K[Kn with paramaters[1Pterseters[C[C[C[C
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ la -a
[0m[01;34m.[0m  [01;34m..[0m  [01;34mbin[0m  .cproject  [01;34mDebug[0m  [01;34m.git[0m  .gitignore  License  LICENSE  Makefile  [01;34mobj[0m  .project  README.md  [01;34msrc[0m  [01;34mtest[0m
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ -s -la
-s: command not found
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ ls -la
total 64
drwxrwxr-x 8 john john  4096 Jan 24 02:27 [0m[01;34m.[0m
drwxrwxr-x 6 john john  4096 Jan 19 12:54 [01;34m..[0m
drwxrwxr-x 2 john john  4096 Jan 24 02:27 [01;34mbin[0m
-rw-rw-r-- 1 john john 12583 Jan  6 21:42 .cproject
drwxrwxr-x 3 john john  4096 Jan 24 02:27 [01;34mDebug[0m
drwxrwxr-x 8 john john  4096 Jan 24 02:28 [01;34m.git[0m
-rw-rw-r-- 1 john john    42 Jan  6 21:58 .gitignore
-rw-rw-r-- 1 john john   555 Jan 21 17:47 License
-rw-rw-r-- 1 john john     0 Jan  5 21:05 LICENSE
-rw-rw-r-- 1 john john   491 Jan 19 18:54 Makefile
drwxrwxr-x 2 john john  4096 Jan 24 02:27 [01;34mobj[0m
-rw-rw-r-- 1 john john  2473 Jan  6 21:42 .project
-rw-rw-r-- 1 john john     0 Jan  5 21:05 README.md
drwxrwxr-x 2 john john  4096 Jan 24 01:36 [01;34msrc[0m
drwxrwxr-x 2 john john  4096 Jan 24 02:31 [01;34mtest[0m
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ ls -l -a
total 64
drwxrwxr-x 8 john john  4096 Jan 24 02:27 [0m[01;34m.[0m
drwxrwxr-x 6 john john  4096 Jan 19 12:54 [01;34m..[0m
drwxrwxr-x 2 john john  4096 Jan 24 02:27 [01;34mbin[0m
-rw-rw-r-- 1 john john 12583 Jan  6 21:42 .cproject
drwxrwxr-x 3 john john  4096 Jan 24 02:27 [01;34mDebug[0m
drwxrwxr-x 8 john john  4096 Jan 24 02:28 [01;34m.git[0m
-rw-rw-r-- 1 john john    42 Jan  6 21:58 .gitignore
-rw-rw-r-- 1 john john   555 Jan 21 17:47 License
-rw-rw-r-- 1 john john     0 Jan  5 21:05 LICENSE
-rw-rw-r-- 1 john john   491 Jan 19 18:54 Makefile
drwxrwxr-x 2 john john  4096 Jan 24 02:27 [01;34mobj[0m
-rw-rw-r-- 1 john john  2473 Jan  6 21:42 .project
-rw-rw-r-- 1 john john     0 Jan  5 21:05 README.md
drwxrwxr-x 2 john john  4096 Jan 24 01:36 [01;34msrc[0m
drwxrwxr-x 2 john john  4096 Jan 24 02:31 [01;34mtest[0m
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ git stat[K[K[K[K[K staus
git: 'staus' is not a git command. See 'git --help'.

Did you mean this?
	status
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ git status
On branch exec
Your branch is up-to-date with 'origin/exec'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31mtest/[m

nothing added to commit but untracked files present (use "git add" to track)
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ echo hello
hello
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ ^C
john@Conical-Desktop-X4:~/Workspace/CS100[exec]$ exit

Script done on Sat 24 Jan 2015 02:34:05 AM PST
